[package]
title = "Clash Detection Sample"
version = "106.5.0"

[dependencies]
"omni.kit.uiapp" = {}

# USD file open/close
"omni.kit.window.file" = {}

# Basic Menus
"omni.kit.menu.utils" = {}
"omni.kit.menu.file" = {}
"omni.kit.menu.edit" = {}
"omni.kit.menu.create" = {}
"omni.kit.menu.common" = {}
"omni.kit.menu.aov" = {}
"omni.kit.context_menu" = {}
"omni.kit.selection" = {}

# Stage Templates
"omni.kit.stage_templates" = {}

# Some Editing Windows
"omni.kit.window.title" = {}
"omni.kit.widget.live" = {}
"omni.kit.widget.cache_indicator" = {}
"omni.kit.window.stage" = {}
"omni.kit.window.toolbar" = {}
"omni.kit.widget.filebrowser" = {}
"omni.kit.window.filepicker" = {}
"omni.kit.window.content_browser" = {}
"omni.kit.collaboration.channel_manager" = {}
"omni.kit.collaboration.viewport.camera" = {}
"omni.kit.collaboration.selection_outline" = {}
"omni.kit.collaboration.stage_columns" = {}
"omni.kit.stage_column.active" = {}

# Tools
"omni.kit.tool.collect" = {}

# Viewport and Renderer
"omni.kit.viewport.bundle" = {}
"omni.kit.viewport.rtx" = {}
"omni.kit.viewport.pxr" = {}
"omni.kit.viewport.iray" = {}
"omni.resourcemonitor" = {}

# MDL
"omni.mdl" = {}
"omni.mdl.neuraylib" = {}

# RTX Tests
# "omni.rtx.tests" = {}
# "omni.kit.renderer.capture" = {}

# Status Bar
"omni.kit.window.status_bar" = {}

# Graphics Stats
"omni.stats" = {}

# Render Settings 2.0
"omni.rtx.settings.core" = {}

# Dev & Utils Windows
"omni.kit.window.about" = {}
"omni.kit.window.privacy" = {}
"omni.kit.window.stats" = { order = 1000 }
"omni.kit.window.script_editor" = {}
"omni.kit.window.console" = {}
"omni.kit.window.preferences" = { order = 1000 } # so the menu is in the correct place
"omni.kit.window.tests" = {}

# Extensions Manager UI
"omni.kit.window.extensions" = {}

# Property Widgets and Window
"omni.kit.window.property" = {}
"omni.kit.property.bundle" = {}

# Misc
"omni.kit.primitive.mesh" = {}
"omni.kit.telemetry" = {}

# Additional Viewport features (legacy grid etc, HUD GPU stats)
"omni.kit.viewport.ready" = {}
# The following is required when progress-bar of shader-compilation is wanted
# (when exts."omni.kit.viewport.ready".activity_progress.enabled = true)
"omni.activity.profiler" = {}
"omni.activity.pump" = {}

# Clash Detection
"omni.physx.clashdetection.bundle" = {}
"omni.samples.clashdetection" = {}

[settings.app.settings]
persistent = true

[settings]
exts."omni.kit.window.file".useNewFilePicker = true
exts."omni.kit.renderer.core".imgui.enableMips = true
app.content.emptyStageOnStart = true

app.extensions.enabledDeprecated = []

renderer.enabled='rtx,iray,pxr'
renderer.active='rtx'

# Fast shutdown by default
app.fastShutdown = true

# Sync materials in parallel from within Hydra
omnihydra.parallelHydraSprimSync = true

exts."omni.kit.viewport.window".startup.dockTabInvisible=true

# Clash Detection
physics.showClashDetectionWindow = true
physics.clashDetectionSamples.showSamplesWindow = true

exts."omni.kit.window.title".version = "${app_version} @ KitSDK ${kit_version}"

# Crash Reporter
crashreporter.alwaysUpload = true
crashreporter.product = "Clash Detection Sample"

[settings.app.window]
title = "Clash Detection Sample"
saveSizeOnExit = true
width = 1920
height = 1080
x = -1
y = -1

[settings.app.exts]
folders = [
    "${kit}/apps",
    "${kit}/exts",
    "${kit}/exts2",
    "${kit}/extscore",
    "${app}/../exts",
    "${app}/../extscache",
    "${app}/../extsClashDetection",
]

# Fonts
[settings.app.font]
file = "${fonts}/OpenSans-SemiBold.ttf" # "${omni.app.setup}/data/fonts/NVIDIASans_Rg.ttf"
size = 16

# Telemetry settings for PUBLIC ONLY use

# Enable physx and clashdetection specific telemetry logging
[settings]
telemetry.enableAnonymousData = true
persistent.physics.enableTelemetry = true
persistent.clashDetection.enableTelemetry = true

[settings.telemetry.transmitter.0]
# Limit on open endpoints is 10MB, make sure to be well below that for logs to actually upload in chunks
transmissionLimit=750000

# Additional optional telemetry debugging facilities
# [settings.telemetry.log]
# level = "verbose"
